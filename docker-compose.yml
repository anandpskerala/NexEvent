services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=1
      - KAFKA_CFG_PROCESS_ROLES=broker,controller
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_KRAFT_CLUSTER_ID=abcdefghijklmnopqrstuv
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - app-network

  user-service:
    build: ./backend/user-service
    image: anandpskerala/user-service:latest
    env_file:
      - ./backend/user-service/.env
    environment:
      - KAFKA_BROKER=kafka:9092
    ports:
      - "5001:5001"
    depends_on:
      - kafka
    networks:
      - app-network
    restart: unless-stopped

  admin-service:
    build: ./backend/admin-service
    image: anandpskerala/admin-service:latest
    env_file:
      - ./backend/admin-service/.env
    environment:
      - KAFKA_BROKER=kafka:9092
      - USER_SERVICE=http://user-service:5001
    ports:
      - "5002:5002"
    depends_on:
      - kafka
    networks:
      - app-network
    restart: unless-stopped

  event-service:
    build: ./backend/event-service
    image: anandpskerala/event-service:latest
    env_file:
      - ./backend/event-service/.env
    environment:
      - KAFKA_BROKER=kafka:9092
    ports:
      - "5003:5003"
    depends_on:
      - kafka
    networks:
      - app-network
    restart: unless-stopped

  message-service:
    build: ./backend/message-service
    image: anandpskerala/message-service:latest
    env_file:
      - ./backend/message-service/.env
    environment:
      - KAFKA_BROKER=kafka:9092
      - USER_SERVICE=http://user-service:5001
    ports:
      - "5004:5004"
    depends_on:
      - kafka
    networks:
      - app-network
    restart: unless-stopped

  api-gateway:
    build:
      context: ./backend/api-gateway
    image: anandpskerala/api-gateway:latest
    env_file:
      - ./backend/api-gateway/.env
    environment:
      - FRONTEND_URL=http://localhost
      - USER_SERVICE=http://user-service:5001
      - ADMIN_SERVICE=http://admin-service:5002
      - EVENT_SERVICE=http://event-service:5003
      - MESSAGE_SERVICE=http://message-service:5004
      - KAFKA_BROKER=kafka:9092
    ports:
      - "5000:5000"
    depends_on:
      - kafka
      - user-service
      - admin-service
      - event-service
      - message-service
    networks:
      - app-network
    restart: unless-stopped


  frontend:
    build:
      context: ./frontend
      args:
        VITE_BACKEND_URL: "http://localhost:5000/api"
        VITE_SOCKET_URL: "http://localhost:5000"
    image: anandpskerala/frontend:latest
    env_file:
      - ./frontend/.env
    ports:
      - "80:80"
    depends_on:
      - api-gateway
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge

volumes:
  kafka_data:
